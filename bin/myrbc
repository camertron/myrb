#! /usr/bin/env ruby

$:.push(File.expand_path("./lib"))

require "pathname"
require "optparse"
require "fileutils"
require "myrb"
require "json"

class MyrbCLI
  def self.parse(argv)
    options = {
      project_dir: Dir.getwd
    }

    parser = OptionParser.new do |opts|
      opts.banner = "Usage: myrbc [options]"

      oneline(<<~DESC).tap do |desc|
        Use this directory as the project root instead of the current working directory.
      DESC
        opts.on('-pDIR', '--project-dir=DIR', desc) do |project_dir|
          options[:project_dir] = project_dir
        end
      end

      opts.on('-h', '--help', 'Prints this help info') do
        puts opts
        exit
      end
    end

    parser.parse(argv)
    new(options)
  end

  def self.oneline(str)
    str.split("\n").join(" ")
  end

  def initialize(options)
    @options = options
  end

  def validate
    # do nothing for now
  end

  def each_file(&block)
    project.each_file(&block)
  end

  private

  def project
    @project = Myrb::Project.new(@options[:project_dir])
  end
end

cli = MyrbCLI.parse(ARGV)
cli.validate

paths = cli.each_file.map do |file|
  rb_path = file.write_rewritten_source
  # puts "Wrote #{rb_path}"

  rbs_path = file.write_rbs
  # puts "Wrote #{rbs_path}"

  {
    source_path: file.path,
    rb_path: rb_path,
    rbs_path: rbs_path
  }
end

puts paths.to_json
